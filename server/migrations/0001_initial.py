# Generated by Django 4.1.13 on 2024-04-19 20:12

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="LocationData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uuid", models.CharField(max_length=100)),
                ("ride_id", models.IntegerField()),
                ("latitude", models.FloatField()),
                ("longitude", models.FloatField()),
                ("speed", models.FloatField()),
                ("timestamp", models.IntegerField()),
                ("movement_angle", models.FloatField()),
                ("address_short", models.CharField(max_length=250, null=True)),
                ("address_full", models.CharField(max_length=250, null=True)),
                (
                    "address_region_type_full",
                    models.CharField(max_length=250, null=True),
                ),
                ("address_region", models.CharField(max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="ProfileData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("uuid", models.CharField(max_length=100, unique=True)),
                (
                    "email",
                    models.EmailField(db_index=True, max_length=254, unique=True),
                ),
                ("name", models.CharField(max_length=256)),
                ("gender", models.CharField(max_length=50)),
                ("city", models.CharField(max_length=256)),
                ("birth_date", models.CharField(max_length=100)),
                ("licence", models.CharField(max_length=100)),
                ("licence_received", models.CharField(max_length=100)),
                ("password", models.CharField(max_length=256)),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RideData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ride_id", models.IntegerField()),
                ("uuid", models.CharField(max_length=100)),
                ("auto_start", models.BooleanField()),
                ("auto_finish", models.BooleanField()),
                ("max_speed", models.FloatField()),
                ("min_speed", models.FloatField()),
                ("light_nighttime", models.FloatField()),
                ("nighttime", models.FloatField()),
                ("detected_role", models.CharField(max_length=50)),
                ("selected_role", models.CharField(max_length=50, null=True)),
                ("weather", models.JSONField()),
                ("dangerous_shifts", models.JSONField()),
                ("dangerous_accelerations", models.JSONField()),
                ("speeding", models.JSONField()),
                (
                    "address",
                    models.JSONField(
                        default={
                            "address_full": "г Москва",
                            "address_region": "Москва",
                            "address_region_type_full": "город",
                            "address_short": "г Москва",
                        }
                    ),
                ),
                ("start_timestamp", models.IntegerField(default=1710335876)),
                ("end_timestamp", models.IntegerField(default=1710429536)),
            ],
        ),
    ]
